Sure, let's go through the steps to create the desired table visualization in Grafana step-by-step.

### Step-by-Step Guide to Create the Table in Grafana

#### 1. Create a New Dashboard

1. **Open Grafana** and log in to your instance.
2. **Click on the "+" button** in the left-hand menu.
3. Select **"Dashboard"**.
4. Click on **"Add new panel"**.

#### 2. Add Queries for Each Metric

You will need to add multiple queries, each corresponding to the different columns you want in your table.

1. **For Total Count per URI**:
    - **Query**:
      ```promql
      sum by (uri) (increase(http_server_requests_seconds_count{container_name="cname"}[28d]))
      ```
    - **Alias (Legend format)**: `{{uri}}`
    - **RefId**: `A`

2. **For Count of Status Code 500 per URI**:
    - **Query**:
      ```promql
      sum by (uri) (increase(http_server_requests_seconds_count{container_name="cname", status="500"}[28d]))
      ```
    - **Alias (Legend format)**: `{{uri}}`
    - **RefId**: `B`

3. **For Count of Status Code 400 per URI**:
    - **Query**:
      ```promql
      sum by (uri) (increase(http_server_requests_seconds_count{container_name="cname", status="400"}[28d]))
      ```
    - **Alias (Legend format)**: `{{uri}}`
    - **RefId**: `C`

4. **For Count of Other Status Codes (not 200, 300, 400, or 500) per URI**:
    - **Query**:
      ```promql
      sum by (uri) (increase(http_server_requests_seconds_count{container_name="cname"}[28d])) - 
      sum by (uri) (increase(http_server_requests_seconds_count{container_name="cname", status=~"2..|3..|400|500"}[28d]))
      ```
    - **Alias (Legend format)**: `{{uri}}`
    - **RefId**: `D`

5. **For Average Count per URI**:
    - **Query**:
      ```promql
      avg by (uri) (increase(http_server_requests_seconds_count{container_name="cname"}[28d]))
      ```
    - **Alias (Legend format)**: `{{uri}}`
    - **RefId**: `E`

#### 3. Configure the Table Visualization

1. **Change Visualization Type**:
    - On the right side, change the visualization type to **"Table"**.

2. **Add Transformations**:
    - Click on the **"Transform"** tab.
    - Add a **"Merge" transformation** to combine the results from multiple queries into a single row based on the `uri` field.
    - Add an **"Organize fields"** transformation to rename and order the columns.

#### 4. Configure the Merge Transformation

1. **Add a Transformation**:
    - Click on **"Add transformation"**.
    - Select **"Merge"**.
    - Configure the merge transformation to merge results based on the `uri` field.

#### 5. Configure the Organize Fields Transformation

1. **Add a Transformation**:
    - Click on **"Add transformation"**.
    - Select **"Organize fields"**.
    - Rename and order the fields:
        - Rename `A` to `URI`.
        - Rename `B` to `Count of 500`.
        - Rename `C` to `Count of 400`.
        - Rename `D` to `Other Status Count`.
        - Rename `E` to `Average Count`.

2. **Reorder Fields**:
    - Ensure the fields are ordered as `URI`, `Count of 500`, `Count of 400`, `Other Status Count`, and `Average Count`.

#### 6. Save the Dashboard

1. **Save the Dashboard**:
    - Click on the **"Save dashboard"** icon (floppy disk icon) at the top.
    - Enter a name for your dashboard (e.g., "HTTP Request").
    - Click **"Save"**.

### Summary

These steps will create a table visualization in Grafana that displays the following columns for each `uri`:
- Total count of requests.
- Count of requests with status code 500.
- Count of requests with status code 400.
- Count of requests with status codes other than 200, 300, 400, and 500.
- Average count of requests.

This setup considers a 28-day time range for all queries. Make sure your Prometheus data source is correctly configured and accessible in Grafana.
